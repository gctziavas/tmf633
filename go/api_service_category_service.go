/*
 * Service Catalog Management
 *
 * ## TMF API Reference: TMF633 - Service Catalog Management   Version 4.0   The Service Catalog API is one of Catalog Management API Family. Service Catalog API goal is to provide a catalog of services.  Service Catalog API performs the following operations on the resource : - Retrieve an entity or a collection of entities depending on filter criteria - Partial update of an entity (including updating rules) - Create an entity (including default values and creation rules) - Delete an entity (for administration purposes) - Manage notification of events. .  Copyright Â© TM Forum 2020. All Rights Reserved. 
 *
 * API version: 4.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package tmf633

import (
	"context"
	"net/http"
	"errors"
)

// ServiceCategoryApiService is a service that implements the logic for the ServiceCategoryApiServicer
// This service should implement the business logic for every endpoint for the ServiceCategoryApi API.
// Include any external packages or services that will be required by this service.
type ServiceCategoryApiService struct {
}

// NewServiceCategoryApiService creates a default api service
func NewServiceCategoryApiService() ServiceCategoryApiServicer {
	return &ServiceCategoryApiService{}
}

// CreateServiceCategory - Creates a ServiceCategory
func (s *ServiceCategoryApiService) CreateServiceCategory(ctx context.Context, serviceCategory ServiceCategoryCreate) (ImplResponse, error) {
	// TODO - update CreateServiceCategory with the required logic for this service method.
	// Add api_service_category_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(201, ServiceCategory{}) or use other options such as http.Ok ...
	//return Response(201, ServiceCategory{}), nil

	//TODO: Uncomment the next line to return response Response(400, Error{}) or use other options such as http.Ok ...
	//return Response(400, Error{}), nil

	//TODO: Uncomment the next line to return response Response(401, Error{}) or use other options such as http.Ok ...
	//return Response(401, Error{}), nil

	//TODO: Uncomment the next line to return response Response(403, Error{}) or use other options such as http.Ok ...
	//return Response(403, Error{}), nil

	//TODO: Uncomment the next line to return response Response(405, Error{}) or use other options such as http.Ok ...
	//return Response(405, Error{}), nil

	//TODO: Uncomment the next line to return response Response(409, Error{}) or use other options such as http.Ok ...
	//return Response(409, Error{}), nil

	//TODO: Uncomment the next line to return response Response(500, Error{}) or use other options such as http.Ok ...
	//return Response(500, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("CreateServiceCategory method not implemented")
}

// DeleteServiceCategory - Deletes a ServiceCategory
func (s *ServiceCategoryApiService) DeleteServiceCategory(ctx context.Context, id string) (ImplResponse, error) {
	// TODO - update DeleteServiceCategory with the required logic for this service method.
	// Add api_service_category_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	//return Response(204, nil),nil

	//TODO: Uncomment the next line to return response Response(400, Error{}) or use other options such as http.Ok ...
	//return Response(400, Error{}), nil

	//TODO: Uncomment the next line to return response Response(401, Error{}) or use other options such as http.Ok ...
	//return Response(401, Error{}), nil

	//TODO: Uncomment the next line to return response Response(403, Error{}) or use other options such as http.Ok ...
	//return Response(403, Error{}), nil

	//TODO: Uncomment the next line to return response Response(404, Error{}) or use other options such as http.Ok ...
	//return Response(404, Error{}), nil

	//TODO: Uncomment the next line to return response Response(405, Error{}) or use other options such as http.Ok ...
	//return Response(405, Error{}), nil

	//TODO: Uncomment the next line to return response Response(409, Error{}) or use other options such as http.Ok ...
	//return Response(409, Error{}), nil

	//TODO: Uncomment the next line to return response Response(500, Error{}) or use other options such as http.Ok ...
	//return Response(500, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("DeleteServiceCategory method not implemented")
}

// ListServiceCategory - List or find ServiceCategory objects
func (s *ServiceCategoryApiService) ListServiceCategory(ctx context.Context, fields string, offset int32, limit int32) (ImplResponse, error) {
	// TODO - update ListServiceCategory with the required logic for this service method.
	// Add api_service_category_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, []ServiceCategory{}) or use other options such as http.Ok ...
	//return Response(200, []ServiceCategory{}), nil

	//TODO: Uncomment the next line to return response Response(400, Error{}) or use other options such as http.Ok ...
	//return Response(400, Error{}), nil

	//TODO: Uncomment the next line to return response Response(401, Error{}) or use other options such as http.Ok ...
	//return Response(401, Error{}), nil

	//TODO: Uncomment the next line to return response Response(403, Error{}) or use other options such as http.Ok ...
	//return Response(403, Error{}), nil

	//TODO: Uncomment the next line to return response Response(404, Error{}) or use other options such as http.Ok ...
	//return Response(404, Error{}), nil

	//TODO: Uncomment the next line to return response Response(405, Error{}) or use other options such as http.Ok ...
	//return Response(405, Error{}), nil

	//TODO: Uncomment the next line to return response Response(409, Error{}) or use other options such as http.Ok ...
	//return Response(409, Error{}), nil

	//TODO: Uncomment the next line to return response Response(500, Error{}) or use other options such as http.Ok ...
	//return Response(500, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("ListServiceCategory method not implemented")
}

// PatchServiceCategory - Updates partially a ServiceCategory
func (s *ServiceCategoryApiService) PatchServiceCategory(ctx context.Context, id string, serviceCategory ServiceCategoryUpdate) (ImplResponse, error) {
	// TODO - update PatchServiceCategory with the required logic for this service method.
	// Add api_service_category_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, ServiceCategory{}) or use other options such as http.Ok ...
	//return Response(200, ServiceCategory{}), nil

	//TODO: Uncomment the next line to return response Response(400, Error{}) or use other options such as http.Ok ...
	//return Response(400, Error{}), nil

	//TODO: Uncomment the next line to return response Response(401, Error{}) or use other options such as http.Ok ...
	//return Response(401, Error{}), nil

	//TODO: Uncomment the next line to return response Response(403, Error{}) or use other options such as http.Ok ...
	//return Response(403, Error{}), nil

	//TODO: Uncomment the next line to return response Response(404, Error{}) or use other options such as http.Ok ...
	//return Response(404, Error{}), nil

	//TODO: Uncomment the next line to return response Response(405, Error{}) or use other options such as http.Ok ...
	//return Response(405, Error{}), nil

	//TODO: Uncomment the next line to return response Response(409, Error{}) or use other options such as http.Ok ...
	//return Response(409, Error{}), nil

	//TODO: Uncomment the next line to return response Response(500, Error{}) or use other options such as http.Ok ...
	//return Response(500, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("PatchServiceCategory method not implemented")
}

// RetrieveServiceCategory - Retrieves a ServiceCategory by ID
func (s *ServiceCategoryApiService) RetrieveServiceCategory(ctx context.Context, id string, fields string) (ImplResponse, error) {
	// TODO - update RetrieveServiceCategory with the required logic for this service method.
	// Add api_service_category_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, ServiceCategory{}) or use other options such as http.Ok ...
	//return Response(200, ServiceCategory{}), nil

	//TODO: Uncomment the next line to return response Response(400, Error{}) or use other options such as http.Ok ...
	//return Response(400, Error{}), nil

	//TODO: Uncomment the next line to return response Response(401, Error{}) or use other options such as http.Ok ...
	//return Response(401, Error{}), nil

	//TODO: Uncomment the next line to return response Response(403, Error{}) or use other options such as http.Ok ...
	//return Response(403, Error{}), nil

	//TODO: Uncomment the next line to return response Response(404, Error{}) or use other options such as http.Ok ...
	//return Response(404, Error{}), nil

	//TODO: Uncomment the next line to return response Response(405, Error{}) or use other options such as http.Ok ...
	//return Response(405, Error{}), nil

	//TODO: Uncomment the next line to return response Response(409, Error{}) or use other options such as http.Ok ...
	//return Response(409, Error{}), nil

	//TODO: Uncomment the next line to return response Response(500, Error{}) or use other options such as http.Ok ...
	//return Response(500, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("RetrieveServiceCategory method not implemented")
}
