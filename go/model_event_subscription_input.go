/*
 * Service Catalog Management
 *
 * ## TMF API Reference: TMF633 - Service Catalog Management   Version 4.0   The Service Catalog API is one of Catalog Management API Family. Service Catalog API goal is to provide a catalog of services.  Service Catalog API performs the following operations on the resource : - Retrieve an entity or a collection of entities depending on filter criteria - Partial update of an entity (including updating rules) - Create an entity (including default values and creation rules) - Delete an entity (for administration purposes) - Manage notification of events. .  Copyright Â© TM Forum 2020. All Rights Reserved. 
 *
 * API version: 4.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package tmf633

// EventSubscriptionInput - Sets the communication endpoint address the service instance must use to deliver notification information
type EventSubscriptionInput struct {

	// The callback being registered.
	Callback string `json:"callback"`

	// additional data to be passed
	Query string `json:"query,omitempty"`
}

// AssertEventSubscriptionInputRequired checks if the required fields are not zero-ed
func AssertEventSubscriptionInputRequired(obj EventSubscriptionInput) error {
	elements := map[string]interface{}{
		"callback": obj.Callback,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseEventSubscriptionInputRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of EventSubscriptionInput (e.g. [][]EventSubscriptionInput), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseEventSubscriptionInputRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aEventSubscriptionInput, ok := obj.(EventSubscriptionInput)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertEventSubscriptionInputRequired(aEventSubscriptionInput)
	})
}
