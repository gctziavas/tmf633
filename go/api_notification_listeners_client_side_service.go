/*
 * Service Catalog Management
 *
 * ## TMF API Reference: TMF633 - Service Catalog Management   Version 4.0   The Service Catalog API is one of Catalog Management API Family. Service Catalog API goal is to provide a catalog of services.  Service Catalog API performs the following operations on the resource : - Retrieve an entity or a collection of entities depending on filter criteria - Partial update of an entity (including updating rules) - Create an entity (including default values and creation rules) - Delete an entity (for administration purposes) - Manage notification of events. .  Copyright Â© TM Forum 2020. All Rights Reserved. 
 *
 * API version: 4.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package tmf633

import (
	"context"
	"net/http"
	"errors"
)

// NotificationListenersClientSideApiService is a service that implements the logic for the NotificationListenersClientSideApiServicer
// This service should implement the business logic for every endpoint for the NotificationListenersClientSideApi API.
// Include any external packages or services that will be required by this service.
type NotificationListenersClientSideApiService struct {
}

// NewNotificationListenersClientSideApiService creates a default api service
func NewNotificationListenersClientSideApiService() NotificationListenersClientSideApiServicer {
	return &NotificationListenersClientSideApiService{}
}

// ListenToServiceCandidateChangeEvent - Client listener for entity ServiceCandidateChangeEvent
func (s *NotificationListenersClientSideApiService) ListenToServiceCandidateChangeEvent(ctx context.Context, data ServiceCandidateChangeEvent) (ImplResponse, error) {
	// TODO - update ListenToServiceCandidateChangeEvent with the required logic for this service method.
	// Add api_notification_listeners_client_side_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(201, EventSubscription{}) or use other options such as http.Ok ...
	//return Response(201, EventSubscription{}), nil

	//TODO: Uncomment the next line to return response Response(400, Error{}) or use other options such as http.Ok ...
	//return Response(400, Error{}), nil

	//TODO: Uncomment the next line to return response Response(401, Error{}) or use other options such as http.Ok ...
	//return Response(401, Error{}), nil

	//TODO: Uncomment the next line to return response Response(403, Error{}) or use other options such as http.Ok ...
	//return Response(403, Error{}), nil

	//TODO: Uncomment the next line to return response Response(404, Error{}) or use other options such as http.Ok ...
	//return Response(404, Error{}), nil

	//TODO: Uncomment the next line to return response Response(405, Error{}) or use other options such as http.Ok ...
	//return Response(405, Error{}), nil

	//TODO: Uncomment the next line to return response Response(409, Error{}) or use other options such as http.Ok ...
	//return Response(409, Error{}), nil

	//TODO: Uncomment the next line to return response Response(500, Error{}) or use other options such as http.Ok ...
	//return Response(500, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("ListenToServiceCandidateChangeEvent method not implemented")
}

// ListenToServiceCandidateCreateEvent - Client listener for entity ServiceCandidateCreateEvent
func (s *NotificationListenersClientSideApiService) ListenToServiceCandidateCreateEvent(ctx context.Context, data ServiceCandidateCreateEvent) (ImplResponse, error) {
	// TODO - update ListenToServiceCandidateCreateEvent with the required logic for this service method.
	// Add api_notification_listeners_client_side_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(201, EventSubscription{}) or use other options such as http.Ok ...
	//return Response(201, EventSubscription{}), nil

	//TODO: Uncomment the next line to return response Response(400, Error{}) or use other options such as http.Ok ...
	//return Response(400, Error{}), nil

	//TODO: Uncomment the next line to return response Response(401, Error{}) or use other options such as http.Ok ...
	//return Response(401, Error{}), nil

	//TODO: Uncomment the next line to return response Response(403, Error{}) or use other options such as http.Ok ...
	//return Response(403, Error{}), nil

	//TODO: Uncomment the next line to return response Response(404, Error{}) or use other options such as http.Ok ...
	//return Response(404, Error{}), nil

	//TODO: Uncomment the next line to return response Response(405, Error{}) or use other options such as http.Ok ...
	//return Response(405, Error{}), nil

	//TODO: Uncomment the next line to return response Response(409, Error{}) or use other options such as http.Ok ...
	//return Response(409, Error{}), nil

	//TODO: Uncomment the next line to return response Response(500, Error{}) or use other options such as http.Ok ...
	//return Response(500, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("ListenToServiceCandidateCreateEvent method not implemented")
}

// ListenToServiceCandidateDeleteEvent - Client listener for entity ServiceCandidateDeleteEvent
func (s *NotificationListenersClientSideApiService) ListenToServiceCandidateDeleteEvent(ctx context.Context, data ServiceCandidateDeleteEvent) (ImplResponse, error) {
	// TODO - update ListenToServiceCandidateDeleteEvent with the required logic for this service method.
	// Add api_notification_listeners_client_side_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(201, EventSubscription{}) or use other options such as http.Ok ...
	//return Response(201, EventSubscription{}), nil

	//TODO: Uncomment the next line to return response Response(400, Error{}) or use other options such as http.Ok ...
	//return Response(400, Error{}), nil

	//TODO: Uncomment the next line to return response Response(401, Error{}) or use other options such as http.Ok ...
	//return Response(401, Error{}), nil

	//TODO: Uncomment the next line to return response Response(403, Error{}) or use other options such as http.Ok ...
	//return Response(403, Error{}), nil

	//TODO: Uncomment the next line to return response Response(404, Error{}) or use other options such as http.Ok ...
	//return Response(404, Error{}), nil

	//TODO: Uncomment the next line to return response Response(405, Error{}) or use other options such as http.Ok ...
	//return Response(405, Error{}), nil

	//TODO: Uncomment the next line to return response Response(409, Error{}) or use other options such as http.Ok ...
	//return Response(409, Error{}), nil

	//TODO: Uncomment the next line to return response Response(500, Error{}) or use other options such as http.Ok ...
	//return Response(500, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("ListenToServiceCandidateDeleteEvent method not implemented")
}

// ListenToServiceCatalogBatchEvent - Client listener for entity ServiceCatalogBatchEvent
func (s *NotificationListenersClientSideApiService) ListenToServiceCatalogBatchEvent(ctx context.Context, data ServiceCatalogBatchEvent) (ImplResponse, error) {
	// TODO - update ListenToServiceCatalogBatchEvent with the required logic for this service method.
	// Add api_notification_listeners_client_side_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(201, EventSubscription{}) or use other options such as http.Ok ...
	//return Response(201, EventSubscription{}), nil

	//TODO: Uncomment the next line to return response Response(400, Error{}) or use other options such as http.Ok ...
	//return Response(400, Error{}), nil

	//TODO: Uncomment the next line to return response Response(401, Error{}) or use other options such as http.Ok ...
	//return Response(401, Error{}), nil

	//TODO: Uncomment the next line to return response Response(403, Error{}) or use other options such as http.Ok ...
	//return Response(403, Error{}), nil

	//TODO: Uncomment the next line to return response Response(404, Error{}) or use other options such as http.Ok ...
	//return Response(404, Error{}), nil

	//TODO: Uncomment the next line to return response Response(405, Error{}) or use other options such as http.Ok ...
	//return Response(405, Error{}), nil

	//TODO: Uncomment the next line to return response Response(409, Error{}) or use other options such as http.Ok ...
	//return Response(409, Error{}), nil

	//TODO: Uncomment the next line to return response Response(500, Error{}) or use other options such as http.Ok ...
	//return Response(500, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("ListenToServiceCatalogBatchEvent method not implemented")
}

// ListenToServiceCatalogChangeEvent - Client listener for entity ServiceCatalogChangeEvent
func (s *NotificationListenersClientSideApiService) ListenToServiceCatalogChangeEvent(ctx context.Context, data ServiceCatalogChangeEvent) (ImplResponse, error) {
	// TODO - update ListenToServiceCatalogChangeEvent with the required logic for this service method.
	// Add api_notification_listeners_client_side_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(201, EventSubscription{}) or use other options such as http.Ok ...
	//return Response(201, EventSubscription{}), nil

	//TODO: Uncomment the next line to return response Response(400, Error{}) or use other options such as http.Ok ...
	//return Response(400, Error{}), nil

	//TODO: Uncomment the next line to return response Response(401, Error{}) or use other options such as http.Ok ...
	//return Response(401, Error{}), nil

	//TODO: Uncomment the next line to return response Response(403, Error{}) or use other options such as http.Ok ...
	//return Response(403, Error{}), nil

	//TODO: Uncomment the next line to return response Response(404, Error{}) or use other options such as http.Ok ...
	//return Response(404, Error{}), nil

	//TODO: Uncomment the next line to return response Response(405, Error{}) or use other options such as http.Ok ...
	//return Response(405, Error{}), nil

	//TODO: Uncomment the next line to return response Response(409, Error{}) or use other options such as http.Ok ...
	//return Response(409, Error{}), nil

	//TODO: Uncomment the next line to return response Response(500, Error{}) or use other options such as http.Ok ...
	//return Response(500, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("ListenToServiceCatalogChangeEvent method not implemented")
}

// ListenToServiceCatalogCreateEvent - Client listener for entity ServiceCatalogCreateEvent
func (s *NotificationListenersClientSideApiService) ListenToServiceCatalogCreateEvent(ctx context.Context, data ServiceCatalogCreateEvent) (ImplResponse, error) {
	// TODO - update ListenToServiceCatalogCreateEvent with the required logic for this service method.
	// Add api_notification_listeners_client_side_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(201, EventSubscription{}) or use other options such as http.Ok ...
	//return Response(201, EventSubscription{}), nil

	//TODO: Uncomment the next line to return response Response(400, Error{}) or use other options such as http.Ok ...
	//return Response(400, Error{}), nil

	//TODO: Uncomment the next line to return response Response(401, Error{}) or use other options such as http.Ok ...
	//return Response(401, Error{}), nil

	//TODO: Uncomment the next line to return response Response(403, Error{}) or use other options such as http.Ok ...
	//return Response(403, Error{}), nil

	//TODO: Uncomment the next line to return response Response(404, Error{}) or use other options such as http.Ok ...
	//return Response(404, Error{}), nil

	//TODO: Uncomment the next line to return response Response(405, Error{}) or use other options such as http.Ok ...
	//return Response(405, Error{}), nil

	//TODO: Uncomment the next line to return response Response(409, Error{}) or use other options such as http.Ok ...
	//return Response(409, Error{}), nil

	//TODO: Uncomment the next line to return response Response(500, Error{}) or use other options such as http.Ok ...
	//return Response(500, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("ListenToServiceCatalogCreateEvent method not implemented")
}

// ListenToServiceCatalogDeleteEvent - Client listener for entity ServiceCatalogDeleteEvent
func (s *NotificationListenersClientSideApiService) ListenToServiceCatalogDeleteEvent(ctx context.Context, data ServiceCatalogDeleteEvent) (ImplResponse, error) {
	// TODO - update ListenToServiceCatalogDeleteEvent with the required logic for this service method.
	// Add api_notification_listeners_client_side_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(201, EventSubscription{}) or use other options such as http.Ok ...
	//return Response(201, EventSubscription{}), nil

	//TODO: Uncomment the next line to return response Response(400, Error{}) or use other options such as http.Ok ...
	//return Response(400, Error{}), nil

	//TODO: Uncomment the next line to return response Response(401, Error{}) or use other options such as http.Ok ...
	//return Response(401, Error{}), nil

	//TODO: Uncomment the next line to return response Response(403, Error{}) or use other options such as http.Ok ...
	//return Response(403, Error{}), nil

	//TODO: Uncomment the next line to return response Response(404, Error{}) or use other options such as http.Ok ...
	//return Response(404, Error{}), nil

	//TODO: Uncomment the next line to return response Response(405, Error{}) or use other options such as http.Ok ...
	//return Response(405, Error{}), nil

	//TODO: Uncomment the next line to return response Response(409, Error{}) or use other options such as http.Ok ...
	//return Response(409, Error{}), nil

	//TODO: Uncomment the next line to return response Response(500, Error{}) or use other options such as http.Ok ...
	//return Response(500, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("ListenToServiceCatalogDeleteEvent method not implemented")
}

// ListenToServiceCategoryChangeEvent - Client listener for entity ServiceCategoryChangeEvent
func (s *NotificationListenersClientSideApiService) ListenToServiceCategoryChangeEvent(ctx context.Context, data ServiceCategoryChangeEvent) (ImplResponse, error) {
	// TODO - update ListenToServiceCategoryChangeEvent with the required logic for this service method.
	// Add api_notification_listeners_client_side_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(201, EventSubscription{}) or use other options such as http.Ok ...
	//return Response(201, EventSubscription{}), nil

	//TODO: Uncomment the next line to return response Response(400, Error{}) or use other options such as http.Ok ...
	//return Response(400, Error{}), nil

	//TODO: Uncomment the next line to return response Response(401, Error{}) or use other options such as http.Ok ...
	//return Response(401, Error{}), nil

	//TODO: Uncomment the next line to return response Response(403, Error{}) or use other options such as http.Ok ...
	//return Response(403, Error{}), nil

	//TODO: Uncomment the next line to return response Response(404, Error{}) or use other options such as http.Ok ...
	//return Response(404, Error{}), nil

	//TODO: Uncomment the next line to return response Response(405, Error{}) or use other options such as http.Ok ...
	//return Response(405, Error{}), nil

	//TODO: Uncomment the next line to return response Response(409, Error{}) or use other options such as http.Ok ...
	//return Response(409, Error{}), nil

	//TODO: Uncomment the next line to return response Response(500, Error{}) or use other options such as http.Ok ...
	//return Response(500, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("ListenToServiceCategoryChangeEvent method not implemented")
}

// ListenToServiceCategoryCreateEvent - Client listener for entity ServiceCategoryCreateEvent
func (s *NotificationListenersClientSideApiService) ListenToServiceCategoryCreateEvent(ctx context.Context, data ServiceCategoryCreateEvent) (ImplResponse, error) {
	// TODO - update ListenToServiceCategoryCreateEvent with the required logic for this service method.
	// Add api_notification_listeners_client_side_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(201, EventSubscription{}) or use other options such as http.Ok ...
	//return Response(201, EventSubscription{}), nil

	//TODO: Uncomment the next line to return response Response(400, Error{}) or use other options such as http.Ok ...
	//return Response(400, Error{}), nil

	//TODO: Uncomment the next line to return response Response(401, Error{}) or use other options such as http.Ok ...
	//return Response(401, Error{}), nil

	//TODO: Uncomment the next line to return response Response(403, Error{}) or use other options such as http.Ok ...
	//return Response(403, Error{}), nil

	//TODO: Uncomment the next line to return response Response(404, Error{}) or use other options such as http.Ok ...
	//return Response(404, Error{}), nil

	//TODO: Uncomment the next line to return response Response(405, Error{}) or use other options such as http.Ok ...
	//return Response(405, Error{}), nil

	//TODO: Uncomment the next line to return response Response(409, Error{}) or use other options such as http.Ok ...
	//return Response(409, Error{}), nil

	//TODO: Uncomment the next line to return response Response(500, Error{}) or use other options such as http.Ok ...
	//return Response(500, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("ListenToServiceCategoryCreateEvent method not implemented")
}

// ListenToServiceCategoryDeleteEvent - Client listener for entity ServiceCategoryDeleteEvent
func (s *NotificationListenersClientSideApiService) ListenToServiceCategoryDeleteEvent(ctx context.Context, data ServiceCategoryDeleteEvent) (ImplResponse, error) {
	// TODO - update ListenToServiceCategoryDeleteEvent with the required logic for this service method.
	// Add api_notification_listeners_client_side_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(201, EventSubscription{}) or use other options such as http.Ok ...
	//return Response(201, EventSubscription{}), nil

	//TODO: Uncomment the next line to return response Response(400, Error{}) or use other options such as http.Ok ...
	//return Response(400, Error{}), nil

	//TODO: Uncomment the next line to return response Response(401, Error{}) or use other options such as http.Ok ...
	//return Response(401, Error{}), nil

	//TODO: Uncomment the next line to return response Response(403, Error{}) or use other options such as http.Ok ...
	//return Response(403, Error{}), nil

	//TODO: Uncomment the next line to return response Response(404, Error{}) or use other options such as http.Ok ...
	//return Response(404, Error{}), nil

	//TODO: Uncomment the next line to return response Response(405, Error{}) or use other options such as http.Ok ...
	//return Response(405, Error{}), nil

	//TODO: Uncomment the next line to return response Response(409, Error{}) or use other options such as http.Ok ...
	//return Response(409, Error{}), nil

	//TODO: Uncomment the next line to return response Response(500, Error{}) or use other options such as http.Ok ...
	//return Response(500, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("ListenToServiceCategoryDeleteEvent method not implemented")
}

// ListenToServiceSpecificationChangeEvent - Client listener for entity ServiceSpecificationChangeEvent
func (s *NotificationListenersClientSideApiService) ListenToServiceSpecificationChangeEvent(ctx context.Context, data ServiceSpecificationChangeEvent) (ImplResponse, error) {
	// TODO - update ListenToServiceSpecificationChangeEvent with the required logic for this service method.
	// Add api_notification_listeners_client_side_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(201, EventSubscription{}) or use other options such as http.Ok ...
	//return Response(201, EventSubscription{}), nil

	//TODO: Uncomment the next line to return response Response(400, Error{}) or use other options such as http.Ok ...
	//return Response(400, Error{}), nil

	//TODO: Uncomment the next line to return response Response(401, Error{}) or use other options such as http.Ok ...
	//return Response(401, Error{}), nil

	//TODO: Uncomment the next line to return response Response(403, Error{}) or use other options such as http.Ok ...
	//return Response(403, Error{}), nil

	//TODO: Uncomment the next line to return response Response(404, Error{}) or use other options such as http.Ok ...
	//return Response(404, Error{}), nil

	//TODO: Uncomment the next line to return response Response(405, Error{}) or use other options such as http.Ok ...
	//return Response(405, Error{}), nil

	//TODO: Uncomment the next line to return response Response(409, Error{}) or use other options such as http.Ok ...
	//return Response(409, Error{}), nil

	//TODO: Uncomment the next line to return response Response(500, Error{}) or use other options such as http.Ok ...
	//return Response(500, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("ListenToServiceSpecificationChangeEvent method not implemented")
}

// ListenToServiceSpecificationCreateEvent - Client listener for entity ServiceSpecificationCreateEvent
func (s *NotificationListenersClientSideApiService) ListenToServiceSpecificationCreateEvent(ctx context.Context, data ServiceSpecificationCreateEvent) (ImplResponse, error) {
	// TODO - update ListenToServiceSpecificationCreateEvent with the required logic for this service method.
	// Add api_notification_listeners_client_side_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(201, EventSubscription{}) or use other options such as http.Ok ...
	//return Response(201, EventSubscription{}), nil

	//TODO: Uncomment the next line to return response Response(400, Error{}) or use other options such as http.Ok ...
	//return Response(400, Error{}), nil

	//TODO: Uncomment the next line to return response Response(401, Error{}) or use other options such as http.Ok ...
	//return Response(401, Error{}), nil

	//TODO: Uncomment the next line to return response Response(403, Error{}) or use other options such as http.Ok ...
	//return Response(403, Error{}), nil

	//TODO: Uncomment the next line to return response Response(404, Error{}) or use other options such as http.Ok ...
	//return Response(404, Error{}), nil

	//TODO: Uncomment the next line to return response Response(405, Error{}) or use other options such as http.Ok ...
	//return Response(405, Error{}), nil

	//TODO: Uncomment the next line to return response Response(409, Error{}) or use other options such as http.Ok ...
	//return Response(409, Error{}), nil

	//TODO: Uncomment the next line to return response Response(500, Error{}) or use other options such as http.Ok ...
	//return Response(500, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("ListenToServiceSpecificationCreateEvent method not implemented")
}

// ListenToServiceSpecificationDeleteEvent - Client listener for entity ServiceSpecificationDeleteEvent
func (s *NotificationListenersClientSideApiService) ListenToServiceSpecificationDeleteEvent(ctx context.Context, data ServiceSpecificationDeleteEvent) (ImplResponse, error) {
	// TODO - update ListenToServiceSpecificationDeleteEvent with the required logic for this service method.
	// Add api_notification_listeners_client_side_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(201, EventSubscription{}) or use other options such as http.Ok ...
	//return Response(201, EventSubscription{}), nil

	//TODO: Uncomment the next line to return response Response(400, Error{}) or use other options such as http.Ok ...
	//return Response(400, Error{}), nil

	//TODO: Uncomment the next line to return response Response(401, Error{}) or use other options such as http.Ok ...
	//return Response(401, Error{}), nil

	//TODO: Uncomment the next line to return response Response(403, Error{}) or use other options such as http.Ok ...
	//return Response(403, Error{}), nil

	//TODO: Uncomment the next line to return response Response(404, Error{}) or use other options such as http.Ok ...
	//return Response(404, Error{}), nil

	//TODO: Uncomment the next line to return response Response(405, Error{}) or use other options such as http.Ok ...
	//return Response(405, Error{}), nil

	//TODO: Uncomment the next line to return response Response(409, Error{}) or use other options such as http.Ok ...
	//return Response(409, Error{}), nil

	//TODO: Uncomment the next line to return response Response(500, Error{}) or use other options such as http.Ok ...
	//return Response(500, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("ListenToServiceSpecificationDeleteEvent method not implemented")
}
