/*
 * Service Catalog Management
 *
 * ## TMF API Reference: TMF633 - Service Catalog Management   Version 4.0   The Service Catalog API is one of Catalog Management API Family. Service Catalog API goal is to provide a catalog of services.  Service Catalog API performs the following operations on the resource : - Retrieve an entity or a collection of entities depending on filter criteria - Partial update of an entity (including updating rules) - Create an entity (including default values and creation rules) - Delete an entity (for administration purposes) - Manage notification of events. .  Copyright Â© TM Forum 2020. All Rights Reserved.
 *
 * API version: 4.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package tmf633

import (
	"context"
	"net/http"
)

// EventsSubscriptionApiRouter defines the required methods for binding the api requests to a responses for the EventsSubscriptionApi
// The EventsSubscriptionApiRouter implementation should parse necessary information from the http request,
// pass the data to a EventsSubscriptionApiServicer to perform the required actions, then write the service results to the http response.
type EventsSubscriptionApiRouter interface {
	RegisterListener(http.ResponseWriter, *http.Request)
	UnregisterListener(http.ResponseWriter, *http.Request)
}

// ExportJobApiRouter defines the required methods for binding the api requests to a responses for the ExportJobApi
// The ExportJobApiRouter implementation should parse necessary information from the http request,
// pass the data to a ExportJobApiServicer to perform the required actions, then write the service results to the http response.
type ExportJobApiRouter interface {
	CreateExportJob(http.ResponseWriter, *http.Request)
	DeleteExportJob(http.ResponseWriter, *http.Request)
	ListExportJob(http.ResponseWriter, *http.Request)
	RetrieveExportJob(http.ResponseWriter, *http.Request)
}

// ImportJobApiRouter defines the required methods for binding the api requests to a responses for the ImportJobApi
// The ImportJobApiRouter implementation should parse necessary information from the http request,
// pass the data to a ImportJobApiServicer to perform the required actions, then write the service results to the http response.
type ImportJobApiRouter interface {
	CreateImportJob(http.ResponseWriter, *http.Request)
	DeleteImportJob(http.ResponseWriter, *http.Request)
	ListImportJob(http.ResponseWriter, *http.Request)
	RetrieveImportJob(http.ResponseWriter, *http.Request)
}

// NotificationListenersClientSideApiRouter defines the required methods for binding the api requests to a responses for the NotificationListenersClientSideApi
// The NotificationListenersClientSideApiRouter implementation should parse necessary information from the http request,
// pass the data to a NotificationListenersClientSideApiServicer to perform the required actions, then write the service results to the http response.
type NotificationListenersClientSideApiRouter interface {
	ListenToServiceCandidateChangeEvent(http.ResponseWriter, *http.Request)
	ListenToServiceCandidateCreateEvent(http.ResponseWriter, *http.Request)
	ListenToServiceCandidateDeleteEvent(http.ResponseWriter, *http.Request)
	ListenToServiceCatalogBatchEvent(http.ResponseWriter, *http.Request)
	ListenToServiceCatalogChangeEvent(http.ResponseWriter, *http.Request)
	ListenToServiceCatalogCreateEvent(http.ResponseWriter, *http.Request)
	ListenToServiceCatalogDeleteEvent(http.ResponseWriter, *http.Request)
	ListenToServiceCategoryChangeEvent(http.ResponseWriter, *http.Request)
	ListenToServiceCategoryCreateEvent(http.ResponseWriter, *http.Request)
	ListenToServiceCategoryDeleteEvent(http.ResponseWriter, *http.Request)
	ListenToServiceSpecificationChangeEvent(http.ResponseWriter, *http.Request)
	ListenToServiceSpecificationCreateEvent(http.ResponseWriter, *http.Request)
	ListenToServiceSpecificationDeleteEvent(http.ResponseWriter, *http.Request)
}

// ServiceCandidateApiRouter defines the required methods for binding the api requests to a responses for the ServiceCandidateApi
// The ServiceCandidateApiRouter implementation should parse necessary information from the http request,
// pass the data to a ServiceCandidateApiServicer to perform the required actions, then write the service results to the http response.
type ServiceCandidateApiRouter interface {
	CreateServiceCandidate(http.ResponseWriter, *http.Request)
	DeleteServiceCandidate(http.ResponseWriter, *http.Request)
	ListServiceCandidate(http.ResponseWriter, *http.Request)
	PatchServiceCandidate(http.ResponseWriter, *http.Request)
	RetrieveServiceCandidate(http.ResponseWriter, *http.Request)
}

// ServiceCatalogApiRouter defines the required methods for binding the api requests to a responses for the ServiceCatalogApi
// The ServiceCatalogApiRouter implementation should parse necessary information from the http request,
// pass the data to a ServiceCatalogApiServicer to perform the required actions, then write the service results to the http response.
type ServiceCatalogApiRouter interface {
	CreateServiceCatalog(http.ResponseWriter, *http.Request)
	DeleteServiceCatalog(http.ResponseWriter, *http.Request)
	ListServiceCatalog(http.ResponseWriter, *http.Request)
	PatchServiceCatalog(http.ResponseWriter, *http.Request)
	RetrieveServiceCatalog(http.ResponseWriter, *http.Request)
}

// ServiceCategoryApiRouter defines the required methods for binding the api requests to a responses for the ServiceCategoryApi
// The ServiceCategoryApiRouter implementation should parse necessary information from the http request,
// pass the data to a ServiceCategoryApiServicer to perform the required actions, then write the service results to the http response.
type ServiceCategoryApiRouter interface {
	CreateServiceCategory(http.ResponseWriter, *http.Request)
	DeleteServiceCategory(http.ResponseWriter, *http.Request)
	ListServiceCategory(http.ResponseWriter, *http.Request)
	PatchServiceCategory(http.ResponseWriter, *http.Request)
	RetrieveServiceCategory(http.ResponseWriter, *http.Request)
}

// ServiceSpecificationApiRouter defines the required methods for binding the api requests to a responses for the ServiceSpecificationApi
// The ServiceSpecificationApiRouter implementation should parse necessary information from the http request,
// pass the data to a ServiceSpecificationApiServicer to perform the required actions, then write the service results to the http response.
type ServiceSpecificationApiRouter interface {
	CreateServiceSpecification(http.ResponseWriter, *http.Request)
	DeleteServiceSpecification(http.ResponseWriter, *http.Request)
	ListServiceSpecification(http.ResponseWriter, *http.Request)
	PatchServiceSpecification(http.ResponseWriter, *http.Request)
	RetrieveServiceSpecification(http.ResponseWriter, *http.Request)
}

// EventsSubscriptionApiServicer defines the api actions for the EventsSubscriptionApi service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type EventsSubscriptionApiServicer interface {
	RegisterListener(context.Context, EventSubscriptionInput) (ImplResponse, error)
	UnregisterListener(context.Context, string) (ImplResponse, error)
}

// ExportJobApiServicer defines the api actions for the ExportJobApi service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type ExportJobApiServicer interface {
	CreateExportJob(context.Context, ExportJobCreate) (ImplResponse, error)
	DeleteExportJob(context.Context, string) (ImplResponse, error)
	ListExportJob(context.Context, string, int32, int32) (ImplResponse, error)
	RetrieveExportJob(context.Context, string, string) (ImplResponse, error)
}

// ImportJobApiServicer defines the api actions for the ImportJobApi service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type ImportJobApiServicer interface {
	CreateImportJob(context.Context, ImportJobCreate) (ImplResponse, error)
	DeleteImportJob(context.Context, string) (ImplResponse, error)
	ListImportJob(context.Context, string, int32, int32) (ImplResponse, error)
	RetrieveImportJob(context.Context, string, string) (ImplResponse, error)
}

// NotificationListenersClientSideApiServicer defines the api actions for the NotificationListenersClientSideApi service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type NotificationListenersClientSideApiServicer interface {
	ListenToServiceCandidateChangeEvent(context.Context, ServiceCandidateChangeEvent) (ImplResponse, error)
	ListenToServiceCandidateCreateEvent(context.Context, ServiceCandidateCreateEvent) (ImplResponse, error)
	ListenToServiceCandidateDeleteEvent(context.Context, ServiceCandidateDeleteEvent) (ImplResponse, error)
	ListenToServiceCatalogBatchEvent(context.Context, ServiceCatalogBatchEvent) (ImplResponse, error)
	ListenToServiceCatalogChangeEvent(context.Context, ServiceCatalogChangeEvent) (ImplResponse, error)
	ListenToServiceCatalogCreateEvent(context.Context, ServiceCatalogCreateEvent) (ImplResponse, error)
	ListenToServiceCatalogDeleteEvent(context.Context, ServiceCatalogDeleteEvent) (ImplResponse, error)
	ListenToServiceCategoryChangeEvent(context.Context, ServiceCategoryChangeEvent) (ImplResponse, error)
	ListenToServiceCategoryCreateEvent(context.Context, ServiceCategoryCreateEvent) (ImplResponse, error)
	ListenToServiceCategoryDeleteEvent(context.Context, ServiceCategoryDeleteEvent) (ImplResponse, error)
	ListenToServiceSpecificationChangeEvent(context.Context, ServiceSpecificationChangeEvent) (ImplResponse, error)
	ListenToServiceSpecificationCreateEvent(context.Context, ServiceSpecificationCreateEvent) (ImplResponse, error)
	ListenToServiceSpecificationDeleteEvent(context.Context, ServiceSpecificationDeleteEvent) (ImplResponse, error)
}

// ServiceCandidateApiServicer defines the api actions for the ServiceCandidateApi service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type ServiceCandidateApiServicer interface {
	CreateServiceCandidate(context.Context, ServiceCandidateCreate) (ImplResponse, error)
	DeleteServiceCandidate(context.Context, string) (ImplResponse, error)
	ListServiceCandidate(context.Context, string, int32, int32) (ImplResponse, error)
	PatchServiceCandidate(context.Context, string, ServiceCandidateUpdate) (ImplResponse, error)
	RetrieveServiceCandidate(context.Context, string, string) (ImplResponse, error)
}

// ServiceCatalogApiServicer defines the api actions for the ServiceCatalogApi service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type ServiceCatalogApiServicer interface {
	CreateServiceCatalog(context.Context, ServiceCatalog) (ImplResponse, error)
	DeleteServiceCatalog(context.Context, string) (ImplResponse, error)
	ListServiceCatalog(context.Context, string, int32, int32) (ImplResponse, error)
	PatchServiceCatalog(context.Context, string, ServiceCatalogUpdate) (ImplResponse, error)
	RetrieveServiceCatalog(context.Context, string, string) (ImplResponse, error)
}

// ServiceCategoryApiServicer defines the api actions for the ServiceCategoryApi service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type ServiceCategoryApiServicer interface {
	CreateServiceCategory(context.Context, ServiceCategoryCreate) (ImplResponse, error)
	DeleteServiceCategory(context.Context, string) (ImplResponse, error)
	ListServiceCategory(context.Context, string, int32, int32) (ImplResponse, error)
	PatchServiceCategory(context.Context, string, ServiceCategoryUpdate) (ImplResponse, error)
	RetrieveServiceCategory(context.Context, string, string) (ImplResponse, error)
}

// ServiceSpecificationApiServicer defines the api actions for the ServiceSpecificationApi service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type ServiceSpecificationApiServicer interface {
	CreateServiceSpecification(context.Context, ServiceSpecificationCreate) (ImplResponse, error)
	DeleteServiceSpecification(context.Context, string) (ImplResponse, error)
	ListServiceSpecification(context.Context, string, int32, int32) (ImplResponse, error)
	PatchServiceSpecification(context.Context, string, ServiceSpecificationUpdate) (ImplResponse, error)
	RetrieveServiceSpecification(context.Context, string, string) (ImplResponse, error)
}
