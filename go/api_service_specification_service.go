/*
 * Service Catalog Management
 *
 * ## TMF API Reference: TMF633 - Service Catalog Management   Version 4.0   The Service Catalog API is one of Catalog Management API Family. Service Catalog API goal is to provide a catalog of services.  Service Catalog API performs the following operations on the resource : - Retrieve an entity or a collection of entities depending on filter criteria - Partial update of an entity (including updating rules) - Create an entity (including default values and creation rules) - Delete an entity (for administration purposes) - Manage notification of events. .  Copyright Â© TM Forum 2020. All Rights Reserved. 
 *
 * API version: 4.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package tmf633

import (
	"context"
	"net/http"
	"errors"
)

// ServiceSpecificationApiService is a service that implements the logic for the ServiceSpecificationApiServicer
// This service should implement the business logic for every endpoint for the ServiceSpecificationApi API.
// Include any external packages or services that will be required by this service.
type ServiceSpecificationApiService struct {
}

// NewServiceSpecificationApiService creates a default api service
func NewServiceSpecificationApiService() ServiceSpecificationApiServicer {
	return &ServiceSpecificationApiService{}
}

// CreateServiceSpecification - Creates a ServiceSpecification
func (s *ServiceSpecificationApiService) CreateServiceSpecification(ctx context.Context, serviceSpecification ServiceSpecificationCreate) (ImplResponse, error) {
	// TODO - update CreateServiceSpecification with the required logic for this service method.
	// Add api_service_specification_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(201, ServiceSpecification{}) or use other options such as http.Ok ...
	//return Response(201, ServiceSpecification{}), nil

	//TODO: Uncomment the next line to return response Response(400, Error{}) or use other options such as http.Ok ...
	//return Response(400, Error{}), nil

	//TODO: Uncomment the next line to return response Response(401, Error{}) or use other options such as http.Ok ...
	//return Response(401, Error{}), nil

	//TODO: Uncomment the next line to return response Response(403, Error{}) or use other options such as http.Ok ...
	//return Response(403, Error{}), nil

	//TODO: Uncomment the next line to return response Response(405, Error{}) or use other options such as http.Ok ...
	//return Response(405, Error{}), nil

	//TODO: Uncomment the next line to return response Response(409, Error{}) or use other options such as http.Ok ...
	//return Response(409, Error{}), nil

	//TODO: Uncomment the next line to return response Response(500, Error{}) or use other options such as http.Ok ...
	//return Response(500, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("CreateServiceSpecification method not implemented")
}

// DeleteServiceSpecification - Deletes a ServiceSpecification
func (s *ServiceSpecificationApiService) DeleteServiceSpecification(ctx context.Context, id string) (ImplResponse, error) {
	// TODO - update DeleteServiceSpecification with the required logic for this service method.
	// Add api_service_specification_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	//return Response(204, nil),nil

	//TODO: Uncomment the next line to return response Response(400, Error{}) or use other options such as http.Ok ...
	//return Response(400, Error{}), nil

	//TODO: Uncomment the next line to return response Response(401, Error{}) or use other options such as http.Ok ...
	//return Response(401, Error{}), nil

	//TODO: Uncomment the next line to return response Response(403, Error{}) or use other options such as http.Ok ...
	//return Response(403, Error{}), nil

	//TODO: Uncomment the next line to return response Response(404, Error{}) or use other options such as http.Ok ...
	//return Response(404, Error{}), nil

	//TODO: Uncomment the next line to return response Response(405, Error{}) or use other options such as http.Ok ...
	//return Response(405, Error{}), nil

	//TODO: Uncomment the next line to return response Response(409, Error{}) or use other options such as http.Ok ...
	//return Response(409, Error{}), nil

	//TODO: Uncomment the next line to return response Response(500, Error{}) or use other options such as http.Ok ...
	//return Response(500, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("DeleteServiceSpecification method not implemented")
}

// ListServiceSpecification - List or find ServiceSpecification objects
func (s *ServiceSpecificationApiService) ListServiceSpecification(ctx context.Context, fields string, offset int32, limit int32) (ImplResponse, error) {
	// TODO - update ListServiceSpecification with the required logic for this service method.
	// Add api_service_specification_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, []ServiceSpecification{}) or use other options such as http.Ok ...
	//return Response(200, []ServiceSpecification{}), nil

	//TODO: Uncomment the next line to return response Response(400, Error{}) or use other options such as http.Ok ...
	//return Response(400, Error{}), nil

	//TODO: Uncomment the next line to return response Response(401, Error{}) or use other options such as http.Ok ...
	//return Response(401, Error{}), nil

	//TODO: Uncomment the next line to return response Response(403, Error{}) or use other options such as http.Ok ...
	//return Response(403, Error{}), nil

	//TODO: Uncomment the next line to return response Response(404, Error{}) or use other options such as http.Ok ...
	//return Response(404, Error{}), nil

	//TODO: Uncomment the next line to return response Response(405, Error{}) or use other options such as http.Ok ...
	//return Response(405, Error{}), nil

	//TODO: Uncomment the next line to return response Response(409, Error{}) or use other options such as http.Ok ...
	//return Response(409, Error{}), nil

	//TODO: Uncomment the next line to return response Response(500, Error{}) or use other options such as http.Ok ...
	//return Response(500, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("ListServiceSpecification method not implemented")
}

// PatchServiceSpecification - Updates partially a ServiceSpecification
func (s *ServiceSpecificationApiService) PatchServiceSpecification(ctx context.Context, id string, serviceSpecification ServiceSpecificationUpdate) (ImplResponse, error) {
	// TODO - update PatchServiceSpecification with the required logic for this service method.
	// Add api_service_specification_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, ServiceSpecification{}) or use other options such as http.Ok ...
	//return Response(200, ServiceSpecification{}), nil

	//TODO: Uncomment the next line to return response Response(400, Error{}) or use other options such as http.Ok ...
	//return Response(400, Error{}), nil

	//TODO: Uncomment the next line to return response Response(401, Error{}) or use other options such as http.Ok ...
	//return Response(401, Error{}), nil

	//TODO: Uncomment the next line to return response Response(403, Error{}) or use other options such as http.Ok ...
	//return Response(403, Error{}), nil

	//TODO: Uncomment the next line to return response Response(404, Error{}) or use other options such as http.Ok ...
	//return Response(404, Error{}), nil

	//TODO: Uncomment the next line to return response Response(405, Error{}) or use other options such as http.Ok ...
	//return Response(405, Error{}), nil

	//TODO: Uncomment the next line to return response Response(409, Error{}) or use other options such as http.Ok ...
	//return Response(409, Error{}), nil

	//TODO: Uncomment the next line to return response Response(500, Error{}) or use other options such as http.Ok ...
	//return Response(500, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("PatchServiceSpecification method not implemented")
}

// RetrieveServiceSpecification - Retrieves a ServiceSpecification by ID
func (s *ServiceSpecificationApiService) RetrieveServiceSpecification(ctx context.Context, id string, fields string) (ImplResponse, error) {
	// TODO - update RetrieveServiceSpecification with the required logic for this service method.
	// Add api_service_specification_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, ServiceSpecification{}) or use other options such as http.Ok ...
	//return Response(200, ServiceSpecification{}), nil

	//TODO: Uncomment the next line to return response Response(400, Error{}) or use other options such as http.Ok ...
	//return Response(400, Error{}), nil

	//TODO: Uncomment the next line to return response Response(401, Error{}) or use other options such as http.Ok ...
	//return Response(401, Error{}), nil

	//TODO: Uncomment the next line to return response Response(403, Error{}) or use other options such as http.Ok ...
	//return Response(403, Error{}), nil

	//TODO: Uncomment the next line to return response Response(404, Error{}) or use other options such as http.Ok ...
	//return Response(404, Error{}), nil

	//TODO: Uncomment the next line to return response Response(405, Error{}) or use other options such as http.Ok ...
	//return Response(405, Error{}), nil

	//TODO: Uncomment the next line to return response Response(409, Error{}) or use other options such as http.Ok ...
	//return Response(409, Error{}), nil

	//TODO: Uncomment the next line to return response Response(500, Error{}) or use other options such as http.Ok ...
	//return Response(500, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("RetrieveServiceSpecification method not implemented")
}
