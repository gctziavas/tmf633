/*
 * Service Catalog Management
 *
 * ## TMF API Reference: TMF633 - Service Catalog Management   Version 4.0   The Service Catalog API is one of Catalog Management API Family. Service Catalog API goal is to provide a catalog of services.  Service Catalog API performs the following operations on the resource : - Retrieve an entity or a collection of entities depending on filter criteria - Partial update of an entity (including updating rules) - Create an entity (including default values and creation rules) - Delete an entity (for administration purposes) - Manage notification of events. .  Copyright Â© TM Forum 2020. All Rights Reserved.
 *
 * API version: 4.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package tmf633

import (
	"context"
	"errors"
	"net/http"
)

// ServiceCatalogApiService is a service that implements the logic for the ServiceCatalogApiServicer
// This service should implement the business logic for every endpoint for the ServiceCatalogApi API.
// Include any external packages or services that will be required by this service.
type ServiceCatalogApiService struct {
}

// NewServiceCatalogApiService creates a default api service
func NewServiceCatalogApiService() ServiceCatalogApiServicer {
	return &ServiceCatalogApiService{}
}

var serviceCatalogList []ServiceCatalog

// CreateServiceCatalog - Creates a ServiceCatalog
func (s *ServiceCatalogApiService) CreateServiceCatalog(ctx context.Context, serviceCatalog ServiceCatalog) (ImplResponse, error) {
	// TODO - update CreateServiceCatalog with the required logic for this service method.
	// Add api_service_catalog_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.
	serviceCatalogList = append(serviceCatalogList, serviceCatalog)
	//TODO: Uncomment the next line to return response Response(201, ServiceCatalog{}) or use other options such as http.Ok ...
	return Response(201, ServiceCatalog{}), nil

	//TODO: Uncomment the next line to return response Response(400, Error{}) or use other options such as http.Ok ...
	//return Response(400, Error{}), nil

	//TODO: Uncomment the next line to return response Response(401, Error{}) or use other options such as http.Ok ...
	//return Response(401, Error{}), nil

	//TODO: Uncomment the next line to return response Response(403, Error{}) or use other options such as http.Ok ...
	//return Response(403, Error{}), nil

	//TODO: Uncomment the next line to return response Response(405, Error{}) or use other options such as http.Ok ...
	//return Response(405, Error{}), nil

	//TODO: Uncomment the next line to return response Response(409, Error{}) or use other options such as http.Ok ...
	//return Response(409, Error{}), nil

	//TODO: Uncomment the next line to return response Response(500, Error{}) or use other options such as http.Ok ...
	//return Response(500, Error{}), nil

	//return Response(http.StatusNotImplemented, nil), errors.New("CreateServiceCatalog method not implemented")
}

// DeleteServiceCatalog - Deletes a ServiceCatalog
func (s *ServiceCatalogApiService) DeleteServiceCatalog(ctx context.Context, id string) (ImplResponse, error) {
	// TODO - update DeleteServiceCatalog with the required logic for this service method.
	// Add api_service_catalog_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	//return Response(204, nil),nil

	//TODO: Uncomment the next line to return response Response(400, Error{}) or use other options such as http.Ok ...
	//return Response(400, Error{}), nil

	//TODO: Uncomment the next line to return response Response(401, Error{}) or use other options such as http.Ok ...
	//return Response(401, Error{}), nil

	//TODO: Uncomment the next line to return response Response(403, Error{}) or use other options such as http.Ok ...
	//return Response(403, Error{}), nil

	//TODO: Uncomment the next line to return response Response(404, Error{}) or use other options such as http.Ok ...
	//return Response(404, Error{}), nil

	//TODO: Uncomment the next line to return response Response(405, Error{}) or use other options such as http.Ok ...
	//return Response(405, Error{}), nil

	//TODO: Uncomment the next line to return response Response(409, Error{}) or use other options such as http.Ok ...
	//return Response(409, Error{}), nil

	//TODO: Uncomment the next line to return response Response(500, Error{}) or use other options such as http.Ok ...
	//return Response(500, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("DeleteServiceCatalog method not implemented")
}

// ListServiceCatalog - List or find ServiceCatalog objects
func (s *ServiceCatalogApiService) ListServiceCatalog(ctx context.Context, fields string, offset int32, limit int32) (ImplResponse, error) {
	// TODO - update ListServiceCatalog with the required logic for this service method.
	// Add api_service_catalog_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, []ServiceCatalog{}) or use other options such as http.Ok ...
	return Response(200, serviceCatalogList), nil

	//TODO: Uncomment the next line to return response Response(400, Error{}) or use other options such as http.Ok ...
	//return Response(400, Error{}), nil

	//TODO: Uncomment the next line to return response Response(401, Error{}) or use other options such as http.Ok ...
	//return Response(401, Error{}), nil

	//TODO: Uncomment the next line to return response Response(403, Error{}) or use other options such as http.Ok ...
	//return Response(403, Error{}), nil

	//TODO: Uncomment the next line to return response Response(404, Error{}) or use other options such as http.Ok ...
	//return Response(404, Error{}), nil

	//TODO: Uncomment the next line to return response Response(405, Error{}) or use other options such as http.Ok ...
	//return Response(405, Error{}), nil

	//TODO: Uncomment the next line to return response Response(409, Error{}) or use other options such as http.Ok ...
	//return Response(409, Error{}), nil

	//TODO: Uncomment the next line to return response Response(500, Error{}) or use other options such as http.Ok ...
	//return Response(500, Error{}), nil

	// return Response(http.StatusNotImplemented, nil), errors.New("ListServiceCatalog method not implemented")
}

// PatchServiceCatalog - Updates partially a ServiceCatalog
func (s *ServiceCatalogApiService) PatchServiceCatalog(ctx context.Context, id string, serviceCatalog ServiceCatalogUpdate) (ImplResponse, error) {
	// TODO - update PatchServiceCatalog with the required logic for this service method.
	// Add api_service_catalog_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, ServiceCatalog{}) or use other options such as http.Ok ...
	//return Response(200, ServiceCatalog{}), nil

	//TODO: Uncomment the next line to return response Response(400, Error{}) or use other options such as http.Ok ...
	//return Response(400, Error{}), nil

	//TODO: Uncomment the next line to return response Response(401, Error{}) or use other options such as http.Ok ...
	//return Response(401, Error{}), nil

	//TODO: Uncomment the next line to return response Response(403, Error{}) or use other options such as http.Ok ...
	//return Response(403, Error{}), nil

	//TODO: Uncomment the next line to return response Response(404, Error{}) or use other options such as http.Ok ...
	//return Response(404, Error{}), nil

	//TODO: Uncomment the next line to return response Response(405, Error{}) or use other options such as http.Ok ...
	//return Response(405, Error{}), nil

	//TODO: Uncomment the next line to return response Response(409, Error{}) or use other options such as http.Ok ...
	//return Response(409, Error{}), nil

	//TODO: Uncomment the next line to return response Response(500, Error{}) or use other options such as http.Ok ...
	//return Response(500, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("PatchServiceCatalog method not implemented")
}

// RetrieveServiceCatalog - Retrieves a ServiceCatalog by ID
func (s *ServiceCatalogApiService) RetrieveServiceCatalog(ctx context.Context, id string, fields string) (ImplResponse, error) {
	// TODO - update RetrieveServiceCatalog with the required logic for this service method.
	// Add api_service_catalog_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, ServiceCatalog{}) or use other options such as http.Ok ...
	//return Response(200, ServiceCatalog{}), nil

	//TODO: Uncomment the next line to return response Response(400, Error{}) or use other options such as http.Ok ...
	//return Response(400, Error{}), nil

	//TODO: Uncomment the next line to return response Response(401, Error{}) or use other options such as http.Ok ...
	//return Response(401, Error{}), nil

	//TODO: Uncomment the next line to return response Response(403, Error{}) or use other options such as http.Ok ...
	//return Response(403, Error{}), nil

	//TODO: Uncomment the next line to return response Response(404, Error{}) or use other options such as http.Ok ...
	//return Response(404, Error{}), nil

	//TODO: Uncomment the next line to return response Response(405, Error{}) or use other options such as http.Ok ...
	//return Response(405, Error{}), nil

	//TODO: Uncomment the next line to return response Response(409, Error{}) or use other options such as http.Ok ...
	//return Response(409, Error{}), nil

	//TODO: Uncomment the next line to return response Response(500, Error{}) or use other options such as http.Ok ...
	//return Response(500, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("RetrieveServiceCatalog method not implemented")
}
